CHANGES IN VERSION 1.3.1
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Greatly increased the speed of the p-values calculation step. See
        https://github.com/lcolladotor/derfinder/issues/29 for details.


CHANGES IN VERSION 1.1.18
-------------------------

BUG FIXES

    o Updated to work with qvalue 1.99.0


CHANGES IN VERSION 1.1.17
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Changed citation information to reference the bioRxiv pre-print

BUG FIXES
    
    o Polished the interaction with bumphunter >= 1.7.3
    o Updated the default cluster option now that BiocParallel::SnowParam()
        no longer has an 'outfile' argument.

CHANGES IN VERSION 1.1.16
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o analyzeChr() now uses annotateTranscripts() and matchGenes() from 
        bumphunter version 1.7.3 (or greater). As announced at
        https://support.bioconductor.org/p/63568/ these changes in bumphunter
        allow straight forward use of non-human annotation. In analyzeChr()
        using a different organism can be used by changing the 'txdb' argument:
        finer control can be achieved through '...'. For example, by specifying
        the 'annotationPackage' argument used in annotateTranscripts().

CHANGES IN VERSION 1.1.15
-------------------------

BUG FIXES

    o makeGenomicState() incorrectly labeled regions as intragenic. The correct
        name is intergenic.


CHANGES IN VERSION 1.1.14
-------------------------

BUG FIXES

    o Fixed an important bug on calculatePvalues()! Basically, internally
        `maxRegionGap` was set to 300 instead of 0 in one step by default.
        Thus the process of mapping regions to genomic coordinates was messed
        up. If you have results prior to this fix you can try using
        https://gist.github.com/bf85e2c7d5d1f8197707 to fix the results as
        much as possible. Basically, regions will be correct but the
        p-values will be approximated with the available information from the
        null regions. Truly fixing the p-values can only be done by re-running
        derfinder.


CHANGES IN VERSION 1.1.5
------------------------

NEW FEATURES

    o Introduced function extendedMapSeqlevels() for using GenomeInfoDb when
        there is information regarding the species and naming style of interest.
        Otherwise sequence names are left unchanged. If used with
        'verbose = TRUE', a message is printed whenever GenomeInfoDb could not
        be used or if some information had to be guessed.

BUG FIXES

    o Fixes https://support.bioconductor.org/p/62136

CHANGES IN VERSION 1.1.3
------------------------

NEW FEATURES

    o loadCoverage() and fullCoverage() now support BamFile and BigWigFile 
        objects

BUG FIXES

    o Fixed a bug in loadCoverage() when the input was a BamFileList. 
        Implemented tests based on the bug. Bug reported at 
        https://support.bioconductor.org/p/62073


CHANGES IN VERSION 0.99.0
-------------------------

NEW FEATURES

    o Preparing to submit to Bioconductor.

CHANGES IN VERSION 0.0.81
-------------------------

NEW FEATURES

    o Added an advanced vignette.

CHANGES IN VERSION 0.0.80
-------------------------

NEW FEATURES

    o Introductory vignette completed.
    
CHANGES IN VERSION 0.0.79
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES
    
    o mergeResults() can now calculate FWER adjusted p-values when provided with
        'optionsStats'. Updated analyzeChr() to supply the required information.


CHANGES IN VERSION 0.0.78
-------------------------

NEW FEATURES

    o Added an introductory vignette.

CHANGES IN VERSION 0.0.77
-------------------------

NEW FEATURES

    o Added advancedArg() [and its alias advanced_arg()] which links to the docs
        for the advanced arguments by opening a browser window with the relevant
        information from GitHub.
    o getRegionCoverage() and coverageToExon() now have the 'files' argument
        which is used only when 'fullCov' is NULL. Both functions will attempt
        to extract the coverage data from the raw files for the regions of
        interest in that case.
        
        Special care has to be taken in order to guarantee that the coverage is
        the same as some reads might be discarded if the region is too narrow.
        See the advanced argument 'protectWhich' in loadCoverage() for more
        information. Also, if 'totalMapped' and 'targetSize' were used prior to
        filtering, they should be used again.
    o loadCoverage() has new advanced arguments that help when reading a
        specific region (or regions) of the genome. 

CHANGES IN VERSION 0.0.76
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o loadCoverage() and fullCoverage() argument 'dirs' has been renamed to 
        'files' for greater consistency with what it represents.
 
CHANGES IN VERSION 0.0.75
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o regionMatrix() now returns the output of getRegionCoverage() so you don't
        have to run it twice if you are interested in using 
        derfinderPlot::plotRegionCoverage()
    o regionMatrix()$regions now guesses the seqlengths

BUG FIXES

    o Fixed .advanced_argument() to work in nested functions
    o Fixed a case in getRegionCoverage() where fullCov$position was provided
        but it was NULL.
    o Fixed regionMatrix(totalMapped, targetSize) case which would previously
        lead to an error in the getRegionCoverage() step.


CHANGES IN VERSION 0.0.74
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Most functions had their arguments changed to increase usability. Some
        have advanced arguments inside the code.


CHANGES IN VERSION 0.0.71
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Introduced coerceGR(), createBwSample() and createBw() for exporting
        output from fullCoverage() into BigWig files.


CHANGES IN VERSION 0.0.70
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o All exported functions now have aliases with underscore names for those
        that prefer them over camel case names. For example, analyze_chr() is
        the new alias for analyzeChr().
    o makeBamList() has been renamed to rawFiles() since it can be used to
        identify a list of BigWig files instead of BAM files.


CHANGES IN VERSION 0.0.69
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o loadCoverage() and fullCoverage() now have a 'tilewidth' argument. When
        specified GenomicFiles is used to read the coverage in chunks. In 
        theory, this can lead to lower memory usage at the expense of time.
        
CHANGES IN VERSION 0.0.67
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o preprocessCoverage() now has a 'toMatrix' argument which is only used when
        'lowMemDir' is not NULL. It controls whether to save the chunks as
        DataFrame objects or dgCMatrix objects and the idea is that it can time
        by just transforming the data once instead of doing so at each
        permutation.

CHANGES IN VERSION 0.0.66
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o fstats.apply() has been moved to it's own package: derfinderHelper. This
        will speed up the run time when using BiocParallel::SnowParam() as
        derfinderHelper takes much less time to load than derfinder.
    o plotCluster(), plotOverview() and plotRegionCoverage() were all moved to
        their new own package: derfinderPlot. This will make maintenance easier
        as the dependency ggbio is still under active development.



CHANGES IN VERSION 0.0.65
-------------------------

    o Re-organized code for fstats.apply(). Note that improving 
        .transformSparseMatrix() would speed up the 'Matrix' method.
    o Note that all parallel functions have some overhead from loading derfinder
        on each worker. Check system.time(library(derfinder)) to see how long
        the overhead is. It only pays off to use more cores if the calculations
        are taking longer than the overhead.


CHANGES IN VERSION 0.0.64
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o fullCoverage() has several new arguments and now is a full parallel 
        implementation of loadCoverage(). These changes were introduced since
        fullCoverage() no longer blows up in memory since version 0.0.62 and
        thus the new recommended use case is to call fullCoverage() instead of
        running one job with loadCoverage() per chromosome or using a lapply()
        loop.

CHANGES IN VERSION 0.0.63
-------------------------

NEW FEATURES

    o fstats.apply() now has 'method' and 'scalefac' arguments. The 'method'
        argument controls which of the 3 implementations to use. The old method
        is called 'regular' now. The new method 'Rle' calculates the 
        F-statistics without de-compressing the data, which is good for memory
        but gets considerably slower as the number of samples increases. The
        default method is 'Matrix' which uses the Matrix package and is both 
        faster (given that the coercion doesn't take long) and less memory
        intensive than the 'regular' method.

SIGNIFICANT USER-VISIBLE CHANGES

    o Functions analyzeChr(), calculatePvalues() and calculateStats() now have
        arguments 'method' and 'scalefac' to match the changes in fstats.apply()

CHANGES IN VERSION 0.0.62
-------------------------

NEW FEATURES

    o derfinder now uses BiocParallel::blapply() instead of parallel::mclapply()
        When 'mc.cores' is greater than 1, BiocParallel::SnowParam() is used to
        construct the cluster. Otherwise, BiocParallel::SerialParam() is used.
        This change reduces memory load when using the functions that have the
        'mc.cores' argument greater than 1.

    o Functions analyzeChr(), calculatePvalues(), calculateStats(),
        coverageToExon(), fullCoverage(), getRegionCoverage(), regionMatrix()
        all have a new argument 'mc.output'. This is passed to 
        BiocParallel::SnowParam(outfile).

SIGNIFICANT USER-VISIBLE CHANGES

    o You may now use fullCoverage() without problems and should no longer
        encounter errors due to longer vectors not being implemented.
    o Functions like fullCoverage() now use much less memory and do not blow up
        as you increase 'mc.cores'. Note however that the memory does increase,
        but now it's close to linear.
    o Examples might take longer to run with 'mc.cores' greater than 1, but that
        is due to the small setup overhead of BiocParallel::SnowParam() which
        is minimal compared to the overall speed gains with real data sets.

CHANGES IN VERSION 0.0.61
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o filterData() and loadCoverage() now have arguments 'totalMapped' and 
        'targetSize'
    o getRegionCoverage() and regionMatrix() can now work with list output from 
        loadCoverage() with a non-NULL cutoff
    o regionMatrix() now has an argument 'runFilter' so it can be used with 
        previous output from loadCoverage()/filterData() with 'returnMean=TRUE'

CHANGES IN VERSION 0.0.60
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o analyzeChr(), annotateRegions(), calculatePvalues(), coverageToExon(),
        findRegions(), fullCoverage(), getRegionCoverage(), 
        makeGenomicState(), mergeResults(), plotCluster(), plotOverview()
        now all have 'chrsStyle' as an argument to specify the chromosome 
        naming convention used. Defaults to UCSC.
    o makeGenomicState() no longer has the 'addChrPrefix' argument. It has been
        replaced by 'chrsStyle' to use GenomeInfoDb to set the naming style.
    o 'chrnums' has been renamed to 'chrs' in fullCoverage() and mergeResults()
    o 'chrnum' has been renamed to 'chr' in analyzeChr()

CHANGES IN VERSION 0.0.59
-------------------------

NEW FEATURES

    o Updated to work with BioC version 3.0

CHANGES IN VERSION 0.0.58
-------------------------

NEW FEATURES

    o loadCoverage() and fullCoverage() can now import data from BigWig files.

CHANGES IN VERSION 0.0.57
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o regionMatrix() now relies on getRegionCoverage() instead of 
        coverageToExon() making it faster and less memory intensive.

CHANGES IN VERSION 0.0.56
-------------------------

NEW FEATURES

    o Added regionMatrix() for filtering coverage data and using the resulting
        regions to construct a count matrix. Uses several derfinder functions.

SIGNIFICANT USER-VISIBLE CHANGES

    o Made coverageToExon() more robust for different names in 'fullCov'.
    o filterData() and loadCoverage() have new arguments 'filter', 'returnMean',
        and 'returnCoverage' which allow speeding up regionMatrix(). 
        preprocessCoverage() was changed accordingly.
    o getRegionCoverage() now internally uses USCS names.

BUG FIXES

    o Fixed warnings in coverageToExon().


CHANGES IN VERSION 0.0.55
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Added a NEWS file with curated information from the git commit history.

CHANGES IN VERSION 0.0.54
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Added example data for mergeResults(). Now all functions have examples.

CHANGES IN VERSION 0.0.53
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Now derfinder includes the genomic state output for hg19 chr21. This
        allowed to implement examples for annotateRegions(), 
        getRegionCoverage(), plotRegionCoverage, and coverageToExon().


CHANGES IN VERSION 0.0.52
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Several examples run much faster now

CHANGES IN VERSION 0.0.51
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o makeGenomicState() now has an example


CHANGES IN VERSION 0.0.50
-------------------------

BUG FIXES

    o Fixed warnings in makeGenomicState() related to changes in AnnotationDbi


CHANGES IN VERSION 0.0.49
-------------------------

BUG FIXES

    o Updated the help for plotRegionCoverage() and fixed an issue.

CHANGES IN VERSION 0.0.48
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o loadCoverage() now allows specifying which strand you want to load. More
        at https://github.com/lcolladotor/derfinder/issues/16

CHANGES IN VERSION 0.0.47
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o getRegionCoverage() now has a depth-adjustment argument
    
BUG FIXES

    o Fixed several bugs as suggested by Andrew Jaffe


CHANGES IN VERSION 0.0.46
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Now requires R version 3.1
    o Changed Github organization to match the Git-SVN Bioconductor bridge
        guidelines.
    o Dropped Rcpp and RcppArmadillo from F-stats calculation. More at
        https://github.com/lcolladotor/derfinder/pull/17
    o Stored the results from some of the example data to speed up other 
        examples. Check ?genomeDataRaw, ?genomeFstats, ?genomeRegions
        
BUG FIXES

    o Fixed 'verbose' for getRegionCoverage()
    o plotRegionCoverage() now matches latest getRegionCoverage() output

CHANGES IN VERSION 0.0.44
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Updated getRegionCoverage() with a new method for sub setting the coverage
        matrices, allowing for coverage estimates from overlapping regions. Now
        also uses mclapply().

BUG FIXES

    o Fixed NAMESPACE to match current bioc-devel (2.14) as suggested by Tim 
        Triche.

CHANGES IN VERSION 0.0.42
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o A series of performance enhancements were made to reduce the memory load
         (albeit a very minor time increase).

BUG FIXES

    o Updated analyzeChr() to handle correctly the new 'lowMemDir' argument.

CHANGES IN VERSION 0.0.41
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Introduced the 'lowMemDir' argument to preprocessCoverage(),
        calculateStats(), calculatePvalues(), fstats.apply(), and analyzeChr().
        Reduces peak memory usage at the expense of some input-output.

CHANGES IN VERSION 0.0.40
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o mergeResults() will not merge pre-processed data by default
    o coverageToExon() now uses mclapply() when possible
    
CHANGES IN VERSION 0.0.39
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Changed how the data is pre-processed and pre-splitted.

CHANGES IN VERSION 0.0.38
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o preprocessCoverage() now uses Reduce() instead of .rowMeans()

CHANGES IN VERSION 0.0.37
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Updated the example in plotCluster()

CHANGES IN VERSION 0.0.36
-------------------------

NEW FEATURES

    o Added collapseFullCoverage()
    
SIGNIFICANT USER-VISIBLE CHANGES

    o sampleDepth() has been greatly changed. It is now based on Hector 
        Corrada's ideas implemented in metagenomeSeq.
    o Updated several man pages.

CHANGES IN VERSION 0.0.35
-------------------------

BUG FIXES

    o Fixed an issue with the bumphunter dependency.

CHANGES IN VERSION 0.0.34
-------------------------

BUG FIXES

    o Merged changes suggested by Michael Love


CHANGES IN VERSION 0.0.33
-------------------------

BUG FIXES

    o Implemented fixes suggested by Michael Love

CHANGES IN VERSION 0.0.32
-------------------------

BUG FIXES

    o Fixed an important bug in the F-stats calculation
    o Implemented fixes suggested by Michael Love

CHANGES IN VERSION 0.0.31
-------------------------

BUG FIXES

    o loadCoverage() now uses readGAlignmentsFromBam()

CHANGES IN VERSION 0.0.30
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Added a 'bai' argument to fullCoverage()
    o loadCoverage() can now work with a pre-defined BamFileList object.

CHANGES IN VERSION 0.0.29
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Now requires R version 3.0.2
    o Changed the default of 'center' in sampleDepth() to FALSE.
    o Added a 'runAnnotation' argument to analyzeChr().
    o Added a 'bai' argument to loadCoverage().
    o Added an 'adjustF' argument to all stats functions. Useful for cases when
        the RSS of the alternative model is very small.

BUG FIXES

    o Fixed plotRegionCoverage() and plotCluster() for unexpected cases.


CHANGES IN VERSION 0.0.28
-------------------------

NEW FEATURES

    o Added sampleDepth()
    
SIGNIFICANT USER-VISIBLE CHANGES

    o generateReport() has been moved to it's own new package called
        derfinderReport. It is available at
        https://github.com/lcolladotor/derfinderReport
    o Examples and analyzeChr() have been updated now that sampleDepth() was 
        added


CHANGES IN VERSION 0.0.26
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Renamed package from derfinder2 to derfinder to comply with Bioconductor
        guidelines.


CHANGES IN VERSION 0.0.25
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Changed how makeModels() deals with cases when mod and mod0 are not full 
        rank.
    o plotCluster() now no longer depends on an active Internet connection for 
        'hg19 = TRUE'.

BUG FIXES

    o Fixed minor graphical issues in plotRegionCoverage(), plotCluster() and
        in generateReport()

CHANGES IN VERSION 0.0.24
-------------------------

BUG FIXES

    o Fixed plotRegionCoverage() for cases when in annotateRegions(minoverlap=x)
        lead to no overlaps being found between a region and annotation.

CHANGES IN VERSION 0.0.23
-------------------------

BUG FIXES

    o Fixed some bugs in calculatePvalues() when no null regions or only some
        were found.
    o Fixed a bug using 'colsubset' on analyzeChr().
    o Fixed an issue when the F-stat cutoff used is too high and no regions are
        found.
    o Fixed an issue when 'testvars' in makeModels() had unused levels.
    o Fixed an issue when qvalue::qvalue() fails due to incorrect estimation of
        pi0
    o Fixed a bug on how the regions were being clustered.

CHANGES IN VERSION 0.0.22
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o MA-style plots in generateReport() now weight the mean by the number of
        samples in each group. Also removed the mean coverage vs area section.
        generateReport() now also has a 'nBestClusters' argument.
    o plotCluster() now uses scales and has a 'forceLarge' argument

BUG FIXES

    o Fixed an important bug in finding candidate DERs. The example 
        for plotCluster() now includes code that was used for visualizing the
        bug.
    o Fixed some NAMESPACE issues

CHANGES IN VERSION 0.0.21
-------------------------

NEW FEATURES

    o Added getRegionCoverage(), coverageToExon(), plotRegionCoverage()

SIGNIFICANT USER-VISIBLE CHANGES

    o Renamed plotRegion() to plotCluster() plus it no longer shows the exons
        track as it is redundant information
    o mergeResults() now also runs annotateRegions()
    o generateReport() now uses plotRegionCoverage() and includes MA-style plots
    
CHANGES IN VERSION 0.0.20
-------------------------

NEW FEATURES

    o Added annotateRegions()

CHANGES IN VERSION 0.0.19
-------------------------

NEW FEATURES

    o Added makeGenomicState()
    
CHANGES IN VERSION 0.0.18
-------------------------

NEW FEATURES

    o Added fullCoverage()

CHANGES IN VERSION 0.0.17
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o preprocessCoverage() now uses the 'groupInfo' argument
    o calculatePvalues() now calculates log2 fold changes (without scaling or
        adjusting for library size)
    o Greatly improved generateReport()

CHANGES IN VERSION 0.0.16
-------------------------

NEW FEATURES

    o Added generateReport()

BUG FIXES

    o Fixed bugs in mergeResults()


CHANGES IN VERSION 0.0.15
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o getSegmentsRle() was greatly simplified

BUG FIXES

    o Fixed analyzeChr(), completed mergeResults()


CHANGES IN VERSION 0.0.14
-------------------------

NEW FEATURES

    o Added analyzeChr() and mergeResults()

SIGNIFICANT USER-VISIBLE CHANGES

    o Updated README.md
    o makeModels() now uses 'testvars' instead of 'group' and has a new
        arguments 'groupInfo', 'center' and 'testIntercept'
    o calculatePvalues() now uses area of regions instead of mean to calculate
        the p-values.
    o preprocessCoverage() now calculates the mean coverage at each base

CHANGES IN VERSION 0.0.13
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Users can specify significance cutoffs for plotOverview() and plotRegion()

CHANGES IN VERSION 0.0.12
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o calculatePvalues() now uses qvalue::qvalue() instead of p.adjust()

CHANGES IN VERSION 0.0.11
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Added plotOverview()

CHANGES IN VERSION 0.0.10
-------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Added plotRegion()

BUG FIXES

    o makeModels() can now handle a vector for the 'adjustvars' argument

CHANGES IN VERSION 0.0.9
------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o calculatePvalues() will adjust the p.values now using p.adjust()
    o makeModels() now can handle a matrix for the 'group' argument

BUG FIXES

    o getSegmentsRle() will now work properly in the case that no segments are
        found

CHANGES IN VERSION 0.0.8
------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o Attempted to reduce memory load in calculateStats() and calculatePvalues()
    
CHANGES IN VERSION 0.0.7
------------------------

SIGNIFICANT USER-VISIBLE CHANGES

    o fstats.apply() now uses Rcpp and RcppArmadillo

CHANGES IN VERSION 0.0.6
------------------------

NEW FEATURES

    o preprocessCoverage() can now automatically select the 'chunksize'

SIGNIFICANT USER-VISIBLE CHANGES

    o Dropped fstats() and is now part of fstats.apply()

CHANGES IN VERSION 0.0.5
------------------------

NEW FEATURES

    o Introduced 'method' argument for getSegmetnsRle()

BUG FIXES

    o No longer permuting the data matrix in calculatePvalues()

CHANGES IN VERSION 0.0.4
------------------------

NEW FEATURES

    o Added makeBamList(), makeModels(), and preprocessCoverage()
    o Added example data from the Montogemery and Pickrell studies. Check
        ?genomeData and ?genomeInfo

CHANGES IN VERSION 0.0.3
------------------------

NEW FEATURES

    o Added calculatePvalues()

CHANGES IN VERSION 0.0.2
------------------------

NEW FEATURES
    
    o Added clusterMakerRle(), findRegions(), and getSegmentsRle()

CHANGES IN VERSION 0.0.1
------------------------

NEW FEATURES
    
    o Added calculateStats(), filterData(), fstats(), and fstats.apply()

SIGNIFICANT USER-VISIBLE CHANGES

    o Renamed makeCoverage() to loadCoverage()
    o Improved NAMESPACE

CHANGES IN VERSION 0.0.0
-----------------------

NEW FEATURES

    o Initialized the package (named derfinder2) from derfinder 
        https://github.com/alyssafrazee/derfinder version 1.0.2
        This version is available at 
        https://github.com/alyssafrazee/derfinder/tree/d49f7b28c26f075da36a50ab67c9d192ab2fd63d
